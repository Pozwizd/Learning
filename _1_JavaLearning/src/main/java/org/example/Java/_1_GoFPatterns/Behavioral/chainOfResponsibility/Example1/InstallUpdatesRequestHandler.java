package org.example.Java._1_GoFPatterns.Behavioral.chainOfResponsibility.Example1;

/**
 * Класс {@code InstallUpdatesRequestHandler} является конкретным обработчиком
 * в цепочке обязанностей. Он отвечает за установку обновлений.
 * Если после установки обновлений требуется перезагрузка ({@code request.isRestartRequired()}
 * возвращает {@code true}), он выводит соответствующее сообщение и передает запрос
 * следующему обработчику в цепочке. В противном случае, он выводит сообщение
 * об успешной установке без необходимости перезагрузки, завершая цепочку обработки.
 */
public class InstallUpdatesRequestHandler implements RequestHandler {
    /**
     * Ссылка на следующий обработчик в цепочке.
     * Используется для передачи запроса дальше, если текущий обработчик
     * не может полностью завершить обработку или должен передать ее следующему.
     */
    private RequestHandler next;

    /**
     * Устанавливает следующего обработчика в цепочке.
     *
     * @param handler Следующий обработчик запроса.
     */
    @Override
    public void setNext(RequestHandler handler) {
        this.next = handler;
    }

    /**
     * Обрабатывает запрос, проверяя необходимость перезагрузки после установки обновлений.
     * Если перезагрузка требуется, выводит сообщение и передает запрос следующему обработчику.
     * В противном случае, выводит сообщение об успешной установке без перезагрузки.
     *
     * @param request Объект запроса, который необходимо обработать.
     */
    @Override
    public void handleRequest(Request request) {
        if (request.isRestartRequired()) {
            System.out.println("Обновление прошло загружено и установлено, требуется перезагрузка");
            // Передаем запрос следующему обработчику, если он существует.
            if (next != null) {
                next.handleRequest(request);
            }
        } else {
            System.out.println("Обновление прошло успешно, перезагрузка не требуется");
        }
    }
}